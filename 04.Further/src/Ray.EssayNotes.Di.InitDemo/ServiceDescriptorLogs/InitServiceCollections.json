[
    {
        "ServiceType": "Microsoft.Extensions.Hosting.IHostingEnvironment",
        "Lifetime": "Singleton",
        "ImplementationInstance": "Microsoft.Extensions.Hosting.Internal.HostingEnvironment"
    },
    {
        "ServiceType": "Microsoft.Extensions.Hosting.IHostEnvironment",
        "Lifetime": "Singleton",
        "ImplementationInstance": "Microsoft.Extensions.Hosting.Internal.HostingEnvironment"
    },
    {
        "ServiceType": "Microsoft.Extensions.Hosting.HostBuilderContext",
        "Lifetime": "Singleton",
        "ImplementationInstance": "Microsoft.Extensions.Hosting.HostBuilderContext"
    },
    {
        "ServiceType": "Microsoft.Extensions.Configuration.IConfiguration",
        "Lifetime": "Singleton",
        "ImplementationFactory": "System.Func`2[System.IServiceProvider,Microsoft.Extensions.Configuration.IConfiguration]"
    },
    {
        "ServiceType": "Microsoft.Extensions.Hosting.IApplicationLifetime",
        "Lifetime": "Singleton",
        "ImplementationFactory": "System.Func`2[System.IServiceProvider,Microsoft.Extensions.Hosting.IApplicationLifetime]"
    },
    {
        "ServiceType": "Microsoft.Extensions.Hosting.IHostApplicationLifetime",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.Extensions.Hosting.Internal.ApplicationLifetime"
    },
    {
        "ServiceType": "Microsoft.Extensions.Hosting.IHostLifetime",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.Extensions.Hosting.Internal.ConsoleLifetime"
    },
    {
        "ServiceType": "Microsoft.Extensions.Hosting.IHost",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.Extensions.Hosting.Internal.Host"
    },
    {
        "ServiceType": "Microsoft.Extensions.Options.IOptions`1",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.Extensions.Options.OptionsManager`1"
    },
    {
        "ServiceType": "Microsoft.Extensions.Options.IOptionsSnapshot`1",
        "Lifetime": "Scoped",
        "ImplementationType": "Microsoft.Extensions.Options.OptionsManager`1"
    },
    {
        "ServiceType": "Microsoft.Extensions.Options.IOptionsMonitor`1",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.Extensions.Options.OptionsMonitor`1"
    },
    {
        "ServiceType": "Microsoft.Extensions.Options.IOptionsFactory`1",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.Extensions.Options.OptionsFactory`1"
    },
    {
        "ServiceType": "Microsoft.Extensions.Options.IOptionsMonitorCache`1",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.Extensions.Options.OptionsCache`1"
    },
    {
        "ServiceType": "Microsoft.Extensions.Logging.ILoggerFactory",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.Extensions.Logging.LoggerFactory"
    },
    {
        "ServiceType": "Microsoft.Extensions.Logging.ILogger`1",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.Extensions.Logging.Logger`1"
    },
    {
        "ServiceType": "Microsoft.Extensions.Options.IConfigureOptions`1[[Microsoft.Extensions.Logging.LoggerFilterOptions, Microsoft.Extensions.Logging, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Singleton",
        "ImplementationInstance": "Microsoft.Extensions.Logging.DefaultLoggerLevelConfigureOptions"
    },
    {
        "ServiceType": "Microsoft.Extensions.Options.IConfigureOptions`1[[Microsoft.Extensions.Logging.LoggerFilterOptions, Microsoft.Extensions.Logging, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Singleton",
        "ImplementationInstance": "Microsoft.Extensions.Options.ConfigureNamedOptions`1[[Microsoft.Extensions.Logging.LoggerFilterOptions, Microsoft.Extensions.Logging, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]"
    },
    {
        "ServiceType": "Microsoft.Extensions.Logging.Configuration.ILoggerProviderConfigurationFactory",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.Extensions.Logging.Configuration.LoggerProviderConfigurationFactory"
    },
    {
        "ServiceType": "Microsoft.Extensions.Logging.Configuration.ILoggerProviderConfiguration`1",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.Extensions.Logging.Configuration.LoggerProviderConfiguration`1"
    },
    {
        "ServiceType": "Microsoft.Extensions.Options.IConfigureOptions`1[[Microsoft.Extensions.Logging.LoggerFilterOptions, Microsoft.Extensions.Logging, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Singleton",
        "ImplementationInstance": "Microsoft.Extensions.Logging.LoggerFilterConfigureOptions"
    },
    {
        "ServiceType": "Microsoft.Extensions.Options.IOptionsChangeTokenSource`1[[Microsoft.Extensions.Logging.LoggerFilterOptions, Microsoft.Extensions.Logging, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Singleton",
        "ImplementationInstance": "Microsoft.Extensions.Options.ConfigurationChangeTokenSource`1[[Microsoft.Extensions.Logging.LoggerFilterOptions, Microsoft.Extensions.Logging, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]"
    },
    {
        "ServiceType": "Microsoft.Extensions.Logging.Configuration.LoggingConfiguration",
        "Lifetime": "Singleton",
        "ImplementationInstance": "Microsoft.Extensions.Logging.Configuration.LoggingConfiguration"
    },
    {
        "ServiceType": "Microsoft.Extensions.Logging.ILoggerProvider",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider"
    },
    {
        "ServiceType": "Microsoft.Extensions.Options.IConfigureOptions`1[[Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions, Microsoft.Extensions.Logging.Console, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.Extensions.Logging.Configuration.LoggerProviderConfigureOptions`2[[Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions, Microsoft.Extensions.Logging.Console, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60],[Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider, Microsoft.Extensions.Logging.Console, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]"
    },
    {
        "ServiceType": "Microsoft.Extensions.Options.IOptionsChangeTokenSource`1[[Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions, Microsoft.Extensions.Logging.Console, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.Extensions.Logging.Configuration.LoggerProviderOptionsChangeTokenSource`2[[Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions, Microsoft.Extensions.Logging.Console, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60],[Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider, Microsoft.Extensions.Logging.Console, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]"
    },
    {
        "ServiceType": "Microsoft.Extensions.Logging.ILoggerProvider",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.Extensions.Logging.Debug.DebugLoggerProvider"
    },
    {
        "ServiceType": "Microsoft.Extensions.Logging.EventSource.LoggingEventSource",
        "Lifetime": "Singleton",
        "ImplementationInstance": "Microsoft.Extensions.Logging.EventSource.LoggingEventSource"
    },
    {
        "ServiceType": "Microsoft.Extensions.Logging.ILoggerProvider",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.Extensions.Logging.EventSource.EventSourceLoggerProvider"
    },
    {
        "ServiceType": "Microsoft.Extensions.Options.IConfigureOptions`1[[Microsoft.Extensions.Logging.LoggerFilterOptions, Microsoft.Extensions.Logging, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.Extensions.Logging.EventLogFiltersConfigureOptions"
    },
    {
        "ServiceType": "Microsoft.Extensions.Options.IOptionsChangeTokenSource`1[[Microsoft.Extensions.Logging.LoggerFilterOptions, Microsoft.Extensions.Logging, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.Extensions.Logging.EventLogFiltersConfigureOptionsChangeSource"
    },
    {
        "ServiceType": "Microsoft.Extensions.Logging.ILoggerProvider",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Hosting.IWebHostEnvironment",
        "Lifetime": "Singleton",
        "ImplementationInstance": "Microsoft.AspNetCore.Hosting.HostingEnvironment"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Hosting.IHostingEnvironment",
        "Lifetime": "Singleton",
        "ImplementationInstance": "Microsoft.AspNetCore.Hosting.HostingEnvironment"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Hosting.IApplicationLifetime",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Hosting.GenericWebHostApplicationLifetime"
    },
    {
        "ServiceType": "Microsoft.Extensions.Options.IConfigureOptions`1[[Microsoft.AspNetCore.Hosting.GenericWebHostServiceOptions, Microsoft.AspNetCore.Hosting, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Singleton",
        "ImplementationInstance": "Microsoft.Extensions.Options.ConfigureNamedOptions`1[[Microsoft.AspNetCore.Hosting.GenericWebHostServiceOptions, Microsoft.AspNetCore.Hosting, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]"
    },
    {
        "ServiceType": "System.Diagnostics.DiagnosticListener",
        "Lifetime": "Singleton",
        "ImplementationInstance": "System.Diagnostics.DiagnosticListener"
    },
    {
        "ServiceType": "System.Diagnostics.DiagnosticSource",
        "Lifetime": "Singleton",
        "ImplementationInstance": "System.Diagnostics.DiagnosticListener"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Http.IHttpContextFactory",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Http.DefaultHttpContextFactory"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Http.IMiddlewareFactory",
        "Lifetime": "Scoped",
        "ImplementationType": "Microsoft.AspNetCore.Http.MiddlewareFactory"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Hosting.Builder.IApplicationBuilderFactory",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Hosting.Builder.ApplicationBuilderFactory"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Connections.IConnectionListenerFactory",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory"
    },
    {
        "ServiceType": "Microsoft.Extensions.Options.IConfigureOptions`1[[Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions, Microsoft.AspNetCore.Server.Kestrel.Core, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Server.Kestrel.Core.Internal.KestrelServerOptionsSetup"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Hosting.Server.IServer",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer"
    },
    {
        "ServiceType": "Microsoft.Extensions.Options.IConfigureOptions`1[[Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions, Microsoft.AspNetCore.Server.Kestrel.Core, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Singleton",
        "ImplementationInstance": "Microsoft.Extensions.Options.ConfigureNamedOptions`1[[Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions, Microsoft.AspNetCore.Server.Kestrel.Core, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]"
    },
    {
        "ServiceType": "Microsoft.Extensions.Options.IPostConfigureOptions`1[[Microsoft.AspNetCore.HostFiltering.HostFilteringOptions, Microsoft.AspNetCore.HostFiltering, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Singleton",
        "ImplementationInstance": "Microsoft.Extensions.Options.PostConfigureOptions`1[[Microsoft.AspNetCore.HostFiltering.HostFilteringOptions, Microsoft.AspNetCore.HostFiltering, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]"
    },
    {
        "ServiceType": "Microsoft.Extensions.Options.IOptionsChangeTokenSource`1[[Microsoft.AspNetCore.HostFiltering.HostFilteringOptions, Microsoft.AspNetCore.HostFiltering, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Singleton",
        "ImplementationInstance": "Microsoft.Extensions.Options.ConfigurationChangeTokenSource`1[[Microsoft.AspNetCore.HostFiltering.HostFilteringOptions, Microsoft.AspNetCore.HostFiltering, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Hosting.IStartupFilter",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.HostFilteringStartupFilter"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Routing.IInlineConstraintResolver",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Routing.DefaultInlineConstraintResolver"
    },
    {
        "ServiceType": "Microsoft.Extensions.ObjectPool.ObjectPoolProvider",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.Extensions.ObjectPool.DefaultObjectPoolProvider"
    },
    {
        "ServiceType": "Microsoft.Extensions.ObjectPool.ObjectPool`1[[Microsoft.AspNetCore.Routing.UriBuildingContext, Microsoft.AspNetCore.Routing, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Singleton",
        "ImplementationFactory": "System.Func`2[System.IServiceProvider,Microsoft.Extensions.ObjectPool.ObjectPool`1[Microsoft.AspNetCore.Routing.UriBuildingContext]]"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder",
        "Lifetime": "Transient",
        "ImplementationFactory": "System.Func`2[System.IServiceProvider,Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder]"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Routing.RoutingMarkerService",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Routing.RoutingMarkerService"
    },
    {
        "ServiceType": "Microsoft.Extensions.Options.IConfigureOptions`1[[Microsoft.AspNetCore.Routing.RouteOptions, Microsoft.AspNetCore.Routing, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Transient",
        "ImplementationFactory": "System.Func`2[System.IServiceProvider,Microsoft.Extensions.DependencyInjection.ConfigureRouteOptions]"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Routing.EndpointDataSource",
        "Lifetime": "Singleton",
        "ImplementationFactory": "System.Func`2[System.IServiceProvider,Microsoft.AspNetCore.Routing.EndpointDataSource]"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Routing.ParameterPolicyFactory",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Routing.DefaultParameterPolicyFactory"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Routing.Matching.MatcherFactory",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Routing.Matching.DfaMatcherFactory"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Routing.Matching.DfaMatcherBuilder",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Routing.Matching.DfaMatcherBuilder"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Routing.Internal.DfaGraphWriter",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Routing.Internal.DfaGraphWriter"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Routing.Matching.DataSourceDependentMatcher+Lifetime",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Routing.Matching.DataSourceDependentMatcher+Lifetime"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Routing.Matching.EndpointMetadataComparer",
        "Lifetime": "Singleton",
        "ImplementationFactory": "System.Func`2[System.IServiceProvider,Microsoft.AspNetCore.Routing.Matching.EndpointMetadataComparer]"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Routing.LinkGenerator",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Routing.DefaultLinkGenerator"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Routing.IEndpointAddressScheme`1[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Routing.EndpointNameAddressScheme"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Routing.IEndpointAddressScheme`1[[Microsoft.AspNetCore.Routing.RouteValuesAddress, Microsoft.AspNetCore.Routing, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Routing.RouteValuesAddressScheme"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Routing.LinkParser",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Routing.DefaultLinkParser"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Routing.Matching.EndpointSelector",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Routing.MatcherPolicy",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Routing.Matching.HttpMethodMatcherPolicy"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Routing.MatcherPolicy",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Routing.Matching.HostMatcherPolicy"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Routing.Template.TemplateBinderFactory",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Routing.Template.DefaultTemplateBinderFactory"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Routing.Patterns.RoutePatternTransformer",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Routing.Patterns.DefaultRoutePatternTransformer"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager",
        "Lifetime": "Singleton",
        "ImplementationInstance": "Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager"
    },
    {
        "ServiceType": "Microsoft.Extensions.Options.IConfigureOptions`1[[Microsoft.AspNetCore.Mvc.MvcOptions, Microsoft.AspNetCore.Mvc.Core, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.MvcCoreMvcOptionsSetup"
    },
    {
        "ServiceType": "Microsoft.Extensions.Options.IPostConfigureOptions`1[[Microsoft.AspNetCore.Mvc.MvcOptions, Microsoft.AspNetCore.Mvc.Core, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Infrastructure.MvcOptionsConfigureCompatibilityOptions"
    },
    {
        "ServiceType": "Microsoft.Extensions.Options.IPostConfigureOptions`1[[Microsoft.AspNetCore.Mvc.MvcOptions, Microsoft.AspNetCore.Mvc.Core, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.MvcCoreMvcOptionsSetup"
    },
    {
        "ServiceType": "Microsoft.Extensions.Options.IConfigureOptions`1[[Microsoft.AspNetCore.Mvc.ApiBehaviorOptions, Microsoft.AspNetCore.Mvc.Core, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.Extensions.DependencyInjection.ApiBehaviorOptionsSetup"
    },
    {
        "ServiceType": "Microsoft.Extensions.Options.IConfigureOptions`1[[Microsoft.AspNetCore.Routing.RouteOptions, Microsoft.AspNetCore.Routing, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.Extensions.DependencyInjection.MvcCoreRouteOptionsSetup"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelFactory",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelFactory"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.ApplicationModels.DefaultApplicationModelProvider"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.ApplicationModels.ApiBehaviorApplicationModelProvider"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Abstractions.IActionDescriptorProvider",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerActionDescriptorProvider"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Infrastructure.IActionDescriptorCollectionProvider",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Infrastructure.ActionSelector"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintCache",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintCache"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintProvider",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.ActionConstraints.DefaultActionConstraintProvider"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Routing.MatcherPolicy",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Routing.ConsumesMatcherPolicy"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Routing.MatcherPolicy",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Routing.ActionConstraintMatcherPolicy"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerActivator"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Controllers.IControllerFactoryProvider",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Controllers.IControllerActivatorProvider",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Controllers.IControllerPropertyActivator",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerPropertyActivator"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Infrastructure.IActionInvokerFactory",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Infrastructure.ActionInvokerFactory"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Abstractions.IActionInvokerProvider",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvokerProvider"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvokerCache",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvokerCache"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Filters.IFilterProvider",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Filters.DefaultFilterProvider"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultTypeMapper",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Infrastructure.ActionResultTypeMapper"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Filters.RequestSizeLimitFilter",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Filters.RequestSizeLimitFilter"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Filters.DisableRequestSizeLimitFilter",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Filters.DisableRequestSizeLimitFilter"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Filters.RequestFormLimitsFilter",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Filters.RequestFormLimitsFilter"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ICompositeMetadataDetailsProvider",
        "Lifetime": "Transient",
        "ImplementationFactory": "System.Func`2[System.IServiceProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ICompositeMetadataDetailsProvider]"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator",
        "Lifetime": "Singleton",
        "ImplementationFactory": "System.Func`2[System.IServiceProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator]"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientValidatorCache",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientValidatorCache"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder"
    },
    {
        "ServiceType": "Microsoft.Extensions.DependencyInjection.MvcMarkerService",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.Extensions.DependencyInjection.MvcMarkerService"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Infrastructure.ITypeActivatorCache",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Infrastructure.TypeActivatorCache"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Routing.IUrlHelperFactory",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Routing.UrlHelperFactory"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Infrastructure.IHttpRequestStreamReaderFactory",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Infrastructure.MemoryPoolHttpRequestStreamReaderFactory"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Infrastructure.IHttpResponseStreamWriterFactory",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Infrastructure.MemoryPoolHttpResponseStreamWriterFactory"
    },
    {
        "ServiceType": "System.Buffers.ArrayPool`1[[System.Byte, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "Lifetime": "Singleton",
        "ImplementationInstance": "System.Buffers.TlsOverPerCoreLockedStacksArrayPool`1[[System.Byte, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
    },
    {
        "ServiceType": "System.Buffers.ArrayPool`1[[System.Char, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "Lifetime": "Singleton",
        "ImplementationInstance": "System.Buffers.TlsOverPerCoreLockedStacksArrayPool`1[[System.Char, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Infrastructure.OutputFormatterSelector",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1[[Microsoft.AspNetCore.Mvc.ObjectResult, Microsoft.AspNetCore.Mvc.Core, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1[[Microsoft.AspNetCore.Mvc.PhysicalFileResult, Microsoft.AspNetCore.Mvc.Core, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Infrastructure.PhysicalFileResultExecutor"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1[[Microsoft.AspNetCore.Mvc.VirtualFileResult, Microsoft.AspNetCore.Mvc.Core, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Infrastructure.VirtualFileResultExecutor"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1[[Microsoft.AspNetCore.Mvc.FileStreamResult, Microsoft.AspNetCore.Mvc.Core, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Infrastructure.FileStreamResultExecutor"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1[[Microsoft.AspNetCore.Mvc.FileContentResult, Microsoft.AspNetCore.Mvc.Core, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1[[Microsoft.AspNetCore.Mvc.RedirectResult, Microsoft.AspNetCore.Mvc.Core, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Infrastructure.RedirectResultExecutor"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1[[Microsoft.AspNetCore.Mvc.LocalRedirectResult, Microsoft.AspNetCore.Mvc.Core, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Infrastructure.LocalRedirectResultExecutor"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1[[Microsoft.AspNetCore.Mvc.RedirectToActionResult, Microsoft.AspNetCore.Mvc.Core, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Infrastructure.RedirectToActionResultExecutor"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1[[Microsoft.AspNetCore.Mvc.RedirectToRouteResult, Microsoft.AspNetCore.Mvc.Core, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Infrastructure.RedirectToRouteResultExecutor"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1[[Microsoft.AspNetCore.Mvc.RedirectToPageResult, Microsoft.AspNetCore.Mvc.Core, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Infrastructure.RedirectToPageResultExecutor"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1[[Microsoft.AspNetCore.Mvc.ContentResult, Microsoft.AspNetCore.Mvc.Core, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Infrastructure.ContentResultExecutor"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1[[Microsoft.AspNetCore.Mvc.JsonResult, Microsoft.AspNetCore.Mvc.Core, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Infrastructure.SystemTextJsonResultExecutor"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Infrastructure.IClientErrorFactory",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Infrastructure.ProblemDetailsClientErrorFactory"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Infrastructure.ProblemDetailsFactory",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Infrastructure.DefaultProblemDetailsFactory"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Routing.MvcRouteHandler",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Routing.MvcRouteHandler"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Routing.MvcAttributeRouteHandler",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Routing.MvcAttributeRouteHandler"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Routing.ControllerActionEndpointDataSource",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Routing.ControllerActionEndpointDataSource"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Routing.ActionEndpointFactory",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Routing.ActionEndpointFactory"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Routing.DynamicControllerEndpointSelector",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Routing.DynamicControllerEndpointSelector"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Routing.MatcherPolicy",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Routing.DynamicControllerEndpointMatcherPolicy"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Filters.MiddlewareFilterConfigurationProvider",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Filters.MiddlewareFilterConfigurationProvider"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Filters.MiddlewareFilterBuilder",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Filters.MiddlewareFilterBuilder"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Hosting.IStartupFilter",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Filters.MiddlewareFilterBuilderStartupFilter"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.ApiExplorer.IApiDescriptionGroupCollectionProvider",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.ApiExplorer.IApiDescriptionProvider",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.ApiExplorer.DefaultApiDescriptionProvider"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Authentication.IAuthenticationService",
        "Lifetime": "Scoped",
        "ImplementationType": "Microsoft.AspNetCore.Authentication.AuthenticationService"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Authentication.IClaimsTransformation",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Authentication.NoopClaimsTransformation"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Authentication.IAuthenticationHandlerProvider",
        "Lifetime": "Scoped",
        "ImplementationType": "Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Authentication.AuthenticationSchemeProvider"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Authorization.IAuthorizationService",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Authorization.DefaultAuthorizationService"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Authorization.DefaultAuthorizationPolicyProvider"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Authorization.IAuthorizationHandlerProvider",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Authorization.DefaultAuthorizationHandlerProvider"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Authorization.DefaultAuthorizationEvaluator"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Authorization.IAuthorizationHandlerContextFactory",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Authorization.DefaultAuthorizationHandlerContextFactory"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Authorization.IAuthorizationHandler",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Authorization.Infrastructure.PassThroughAuthorizationHandler"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Authorization.Policy.AuthorizationPolicyMarkerService",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Authorization.Policy.AuthorizationPolicyMarkerService"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Authorization.Policy.IPolicyEvaluator",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Authorization.Policy.PolicyEvaluator"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.ApplicationModels.AuthorizationApplicationModelProvider"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Cors.Infrastructure.ICorsService",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Cors.Infrastructure.CorsService"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyProvider",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Cors.CorsApplicationModelProvider"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Cors.CorsAuthorizationFilter",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Cors.CorsAuthorizationFilter"
    },
    {
        "ServiceType": "Microsoft.Extensions.Options.IConfigureOptions`1[[Microsoft.AspNetCore.Mvc.MvcOptions, Microsoft.AspNetCore.Mvc.Core, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Transient",
        "ImplementationType": "Microsoft.Extensions.DependencyInjection.MvcDataAnnotationsMvcOptionsSetup"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.DataAnnotations.IValidationAttributeAdapterProvider",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.DataAnnotations.ValidationAttributeAdapterProvider"
    },
    {
        "ServiceType": "Microsoft.AspNetCore.Mvc.Formatters.FormatFilter",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Mvc.Formatters.FormatFilter"
    },
    {
        "ServiceType": "Ray.EssayNotes.Di.InitDemo.SingletonService",
        "Lifetime": "Singleton",
        "ImplementationFactory": "System.Func`2[System.IServiceProvider,Ray.EssayNotes.Di.InitDemo.SingletonService]"
    },
    {
        "ServiceType": "Microsoft.Extensions.Options.IConfigureOptions`1[[Microsoft.AspNetCore.Hosting.GenericWebHostServiceOptions, Microsoft.AspNetCore.Hosting, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "Lifetime": "Singleton",
        "ImplementationInstance": "Microsoft.Extensions.Options.ConfigureNamedOptions`1[[Microsoft.AspNetCore.Hosting.GenericWebHostServiceOptions, Microsoft.AspNetCore.Hosting, Version=3.1.6.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]"
    },
    {
        "ServiceType": "Microsoft.Extensions.Hosting.IHostedService",
        "Lifetime": "Singleton",
        "ImplementationType": "Microsoft.AspNetCore.Hosting.GenericWebHostService"
    }
]